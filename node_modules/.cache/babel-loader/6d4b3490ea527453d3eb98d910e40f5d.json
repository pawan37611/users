{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"USER_FETCH_SUCCEEDED\":\n      {\n        return { ...state,\n          users: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const fetchData = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nfunction* fetchUser(action) {\n  if (action.type === \"USER_FETCH_REQUESTED\") {\n    const response = yield call(fetchData, action.url);\n    yield put({\n      type: \"USER_FETCH_SUCCEEDED\",\n      payload: response\n    });\n  }\n}\n\nexport function* mySaga() {\n  yield takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\n}\nexport default combineReducers({\n  userReducer\n});","map":{"version":3,"sources":["/Users/pawankumar/Documents/my-app/src/reducer.js"],"names":["combineReducers","call","put","takeEvery","userReducer","state","action","type","users","payload","fetchData","url","response","fetch","data","json","e","console","log","fetchUser","mySaga"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AAA6B;AAC3B,eAAO,EAAE,GAAGF,KAAL;AAAYG,UAAAA,KAAK,EAAEF,MAAM,CAACG;AAA1B,SAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AALJ;AAOD,CARD;;AAUA,OAAO,MAAMK,SAAS,GAAG,MAAOC,GAAP,IAAe;AACtC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD,CAIE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CARM;;AAUP,UAAUG,SAAV,CAAoBb,MAApB,EAA4B;AAC1B,MAAIA,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC1C,UAAMK,QAAQ,GAAG,MAAMX,IAAI,CAACS,SAAD,EAAYJ,MAAM,CAACK,GAAnB,CAA3B;AAEA,UAAMT,GAAG,CAAC;AAAEK,MAAAA,IAAI,EAAE,sBAAR;AAAgCE,MAAAA,OAAO,EAAEG;AAAzC,KAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUQ,MAAV,GAAmB;AACxB,QAAMjB,SAAS,CAAC,sBAAD,EAAyBgB,SAAzB,CAAf;AACD;AAED,eAAenB,eAAe,CAAC;AAC7BI,EAAAA;AAD6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"USER_FETCH_SUCCEEDED\": {\n      return { ...state, users: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nfunction* fetchUser(action) {\n  if (action.type === \"USER_FETCH_REQUESTED\") {\n    const response = yield call(fetchData, action.url);\n\n    yield put({ type: \"USER_FETCH_SUCCEEDED\", payload: response });\n  }\n}\n\nexport function* mySaga() {\n  yield takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\n}\n\nexport default combineReducers({\n  userReducer,\n});\n"]},"metadata":{},"sourceType":"module"}